<!DOCTYPE html>
<html lang="zh-CN">

<head>
        <link rel="canonical" href="https://vergeclash.github.io/news/article-21281.htm" />
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <title>系统设计的11个考虑编程一生</title>
        <meta name="description" content="有了《系统架构的11条原则》，真正到设计阶段还有另外11个考虑。 系统正确性 考虑一：负负得正 假如我们看到某个代码，明显有逻辑错误，想随手改改。你就要考虑一件事情：这段明显有问题的代码为什么在线上运" />
        <link rel="icon" href="__ADDON__/img/vergeclash/favicon.ico" type="image/x-icon"/>
    <link href="https://fonts.googleapis.com/css?family=Poppins:400,400i,500,500i,600,600i,700,700i,800,800i,900,900i|Roboto:400,400i,500,500i,700,700i,900,900i&display=swap" rel="stylesheet">
    <!-- fontawesome css link -->
    <link rel="stylesheet" href="/assets/website/css/vergeclash/fontawesome-all.min.css">
    <!-- flaticon css -->
    <link rel="stylesheet" href="/assets/website/fonts/vergeclash/flaticon.css">
    <!-- magnific popup -->
    <link rel="stylesheet" href="/assets/website/css/vergeclash/magnific-popup.css">
    <!-- nice-select css -->
    <link rel="stylesheet" href="/assets/website/css/vergeclash/nice-select.css">
    <!-- bootstrap css link -->
    <link rel="stylesheet" href="/assets/website/css/vergeclash/bootstrap.min.css">
    <!-- swipper css link -->
    <link rel="stylesheet" href="/assets/website/css/vergeclash/swiper.min.css">
    <!-- animate.css -->
    <link rel="stylesheet" href="/assets/website/css/vergeclash/animate.css">
    <!-- main style css link -->
    <link rel="stylesheet" href="/assets/website/css/vergeclash/style.css">
    <!-- Google tag (gtag.js) -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-J1J0SRBETJ"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-J1J0SRBETJ');
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body data-page="detail">
        <div class="preloader">
        <div class="preloader-inner">
            <div class="preloader-icon">
                <span></span>
                <span></span>
            </div><!-- /preloader-icon -->
        </div><!-- /preloader-inner -->
    </div><!-- /preloader -->
    <!-- header-section start -->
    <header class="header-section">
        <div class="header">
            <div class="header-bottom-area">
                <div class="container">
                    <nav class="navbar navbar-expand-lg p-0">
                                                <a class="site-logo site-title" href="/"><span>Verge Clash</span></a>
                                                <button class="navbar-toggler ml-auto" type="button" data-toggle="collapse" data-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
                            <span class="fas fa-bars"></span>
                        </button>
                        <div class="collapse navbar-collapse" id="navbarSupportedContent">
                            <ul class="navbar-nav main-menu ml-auto">
                                                                <li><a href="/">首页</a></li>
                                                                <li><a href="/free-nodes/">免费节点</a></li>
                                                                <li><a href="/paid-subscribe/">推荐机场</a></li>
                                                                <li><a href="/news/">新闻资讯</a></li>
                                                                <li><a href="#">关于</a></li>
                                <li><a href="#">联系</a></li>
                            </ul>
                        </div>
                    </nav>
                </div>
            </div>
        </div>
    </header>
    <!-- header-section end -->
    <!-- inner-banner-section start -->
    <section class="inner-banner-section bg-overlay-main-two bg_img" data-background="assets/images/bg-3.jpg">
        <div class="container">
            <div class="row justify-content-center">
                <div class="col-lg-12 text-center">
                    <div class="inner-banner-content">
                        <h1 class="title wow fade-in-up" data-wow-duration="1s" data-wow-delay="0.5s">系统设计的11个考虑编程一生</h1>
                        <div class="breadcrumb-area wow fade-in-bottom" data-wow-duration="1s" data-wow-delay="0.5s">
                            <nav aria-label="breadcrumb">
                                <ol class="breadcrumb">
                                    <li class="breadcrumb-item"><a href="/">首页</a></li>
                                    <li class="breadcrumb-item"><a href="/news/">新闻资讯</a></li>
                                    <li class="breadcrumb-item active" aria-current="page">正文</li>
                                </ol>
                            </nav>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </section>
    <!-- inner-banner-section end -->
    
    <a href="#" class="scrollToTop"><i class="fas fa-angle-up"></i></a>
    <!-- about-section start -->
    <section class="about-section pd-t-120 py-5">
        <div class="container">
            <div class="row">
                <div class="col-md-9">
                                      				  				  				<p>有了《<a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=http://mp.weixin.qq.com/s?__biz=MzUzNjAxODg4MQ==&amp;mid=2247487034&amp;idx=1&amp;sn=76192e552b7a3ff6efcfc150e6becf2c&amp;chksm=fafde494cd8a6d82abed8d8372e667009cf1de7a2de54913f0c0c81ad7036478e0b9b20dd9fb&amp;scene=21#wechat_redirect"  target="_blank" data-itemshowtype="0" data-linktype="2" rel="nofollow"><strong>系统架构的11条原则</strong></a>》，真正到设计阶段还有另外11个考虑。</p> <p><strong>系统正确性</strong></p> <p><strong>考虑一：负负得正</strong></p> <p>假如我们看到某个代码，明显有逻辑错误，想随手改改。你就要考虑一件事情：这段明显有问题的代码为什么在线上运行着没有人来报bug？有一种正常运行叫做【<a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=http://mp.weixin.qq.com/s?__biz=MzUzNjAxODg4MQ==&amp;mid=2247485646&amp;idx=1&amp;sn=865d300bd03db4ea45f5ed743a6cbb60&amp;chksm=fafde260cd8a6b7686cbfd5464401d5a834398a78d56926d2856672aab3fa60d99406412d99e&amp;scene=21#wechat_redirect"  target="_blank" data-itemshowtype="0" data-linktype="2" rel="nofollow"><strong>负负得正</strong></a>】。如果把错误的逻辑改对了反而可能引起问题。</p> <p>这种问题要避免最好的时机是初版设计和开发阶段就避免。除了设计阶段逻辑要清晰，代码要做好审查、加上单体测试等测试手段外，可以将中间结果用debug日志打印。建议自测阶段多用debug级别日志跑几遍，进行观察。</p> <p><strong>考虑二：终态设计</strong></p> <p>在分布式系统中，由于系统是分布在不同机器上的。还可能有一种状态叫：超时。成功、失败和超时是<a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=http://mp.weixin.qq.com/s?__biz=MzUzNjAxODg4MQ==&amp;mid=2247484510&amp;idx=1&amp;sn=dbe4c622a7ef5d667f675420d5e4464c&amp;chksm=fafdeef0cd8a67e64981d80c89c2c0a8fcb36177e5e19dcde180bc1e9718b577dce4d5d2d937&amp;scene=21#wechat_redirect"  target="_blank" data-itemshowtype="0" data-linktype="2" rel="nofollow"><strong>分布式系统调用的三态</strong></a>。</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220509/a962d01c6a2029f62f2243010849d9af.jpg" alt="系统设计的11个考虑编程一生 "></p> <p>超时不是终态，而是一种中间状态：最终有可能下游是成功了，也有可能是失败了。这时候我们需要在超时之后推定一种状态，推定成功或者失败。究竟是成功还是失败因功能而异。</p> <p>比如付款操作，需要推定失败。如果不知道是否成功就推定是成功的，那用户可能没有付款就拿到了商品或者享受了服务，商家就会资金损失。推定失败让用户再次支付，最终通过查询或者对账发现用户实际是支付成功的，可以再把钱给用户退回去，保证交易的公平性。</p> <p>退款恰恰相反，需要推定成功。告诉用户，钱退给你了。最终通过查询或者对账发现实际是退款失败了，可以系统重新发起退款，直到真正退成功为止。</p> <p>后台管理系统也很需要这种终态设计。比如发布系统，发布了一个功能，发布系统如果出现了问题，这次发布没有结束。用户可能没有办法进行下一次发布。这时候可以设置超时自动结束，防止未结束的流程始终在那里。</p> <p><strong>考虑三：</strong><strong>长尾效应</strong></p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220509/0f3f6b0174b59bffdc8a7fd3337a9836.jpg" alt="系统设计的11个考虑编程一生 "></p> <p>如上图，随便找了一个调用的耗时。从上面可以看到平均耗时13.9ms，百分之99的耗时在30ms内，最大耗时有488ms。那对于超过100ms的请求来说，是不是在30ms内还不返回就直接丢弃这个请求重新发起一个，新请求有99%的概率在30ms内返回结果，从时间上更划算？</p> <p>而之所以对同一个请求性能差距很大，原因很多，常见的有服务过载和队列过长。如果长尾处理不好，有可能上游判定超时，导致请求失败，影响正确性。需要系统处理好<a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=http://mp.weixin.qq.com/s?__biz=MzUzNjAxODg4MQ==&amp;mid=2247484362&amp;idx=1&amp;sn=741629424adc436b02af25e7a0667087&amp;chksm=fafde964cd8a6072aaf01d87d4391b9178d3cfac0eb88cc55590c8fb5be81d846fc4d70ef06e&amp;scene=21#wechat_redirect"  target="_blank" data-itemshowtype="0" data-linktype="2" rel="nofollow"><strong>超时和重试</strong></a>。</p> <p><strong>系统容量</strong></p> <p><strong>考虑四：</strong><strong>存储周期</strong></p> <p>数据库、应用系统的磁盘都是宝贵的资源。数据不能无限期存储不做清理。清理的周期是一个重要的考虑方面。因为这涉及对用户的承诺。</p> <p>对数据库来说，比如交易库数据半年清理一次。那就要跟用户说清楚半年以上的交易不允许退款。因为原交易已经不在数据库，而是<a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=http://mp.weixin.qq.com/s?__biz=MzUzNjAxODg4MQ==&amp;mid=2247485331&amp;idx=1&amp;sn=afb38bdedcdd103fa7c800307a7344b1&amp;chksm=fafded3dcd8a642b1e92dd4ec673591c9e1b419c3b2a57b6fa9539c79839a39e733e24949933&amp;scene=21#wechat_redirect"  target="_blank" data-itemshowtype="0" data-linktype="2" rel="nofollow"><strong>归档</strong></a>到大数据了。</p> <p>对磁盘来说，如果应用日志是30天清理一次。那就要跟用户达成一致，非重大问题30天以上的不予追溯。为什么这里说重大问题呢，其实很多公司磁盘清理了，数据在hbase等大数据设备里还是有留存的。只是查询没有磁盘日志便利。</p> <p><strong><strong>考虑五：</strong></strong><strong>AKF扩展</strong></p> <p><strong>AKF扩展立方体</strong><strong>（Scalability Cube）</strong>，是《<a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=http://mp.weixin.qq.com/s?__biz=MzUzNjAxODg4MQ==&amp;mid=2247485553&amp;idx=1&amp;sn=945e46d81bef62f35ac447895d99cdd2&amp;chksm=fafde2dfcd8a6bc905cd0e9e50a9e51247a6d53f614a948b89209341a55877893a3fcba295dd&amp;scene=21#wechat_redirect"  target="_blank" data-itemshowtype="0" data-linktype="2" rel="nofollow"><strong>架构即未来</strong></a>》一书中提出的可扩展模型，这个立方体有三个轴线，每个轴线描述扩展性的一个维度：</p> <p>X轴 —— 代表无差别的克隆服务和数据，工作可以很均匀的分散在不同的服务实例上；</p> <p>Y轴 —— 关注应用中职责的划分，比如数据类型，交易执行类型的划分；</p> <p>Z轴 —— 关注服务和数据的优先级划分，如分地域划分。</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220509/80bc2062a02d5021d823c23910032069.jpg" alt="系统设计的11个考虑编程一生 "></p> <p>白话来说：X轴拆分就是通过加机器水平拆分，就是横向扩展；Y轴拆分就是按业务逻辑垂直拆分；Z轴拆分就是按照算法进行分片，这个算法比如按地域，不同地域访问不同的分片或者服务。</p> <p>举个例子，比如一般公司的<a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=http://mp.weixin.qq.com/s?__biz=MzUzNjAxODg4MQ==&amp;mid=2247485868&amp;idx=1&amp;sn=843459f44e37003814c7a9b44bf721ec&amp;chksm=fafde302cd8a6a142123716eef9228df519285d9d1b94b6a135fb701adf8cf826a570298f497&amp;scene=21#wechat_redirect"  target="_blank" data-itemshowtype="0" data-linktype="2" rel="nofollow"><strong>redis集群</strong></a>会有一个团队来进行统一维护。redis集群有主有从，数据都是一样的，多副本容灾，这是X轴水平的拆分。一个公司很多业务，redis团队会对不同的业务提供不同的集群，这是Y轴垂直拆分；集群内部数据会通过sharding做分片，这是Z轴算法拆分。</p> <p><strong>系统运维</strong></p> <p><strong>考虑六：服务自治</strong></p> <p>当一个服务的逻辑单元由自身的领域边界内所控制，不受其他外界条件的影响（外界条件带有不可预测性），且运行环境是自身可控，完全自给自足，我们认为这个<a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=http://mp.weixin.qq.com/s?__biz=MzUzNjAxODg4MQ==&amp;mid=2247483946&amp;idx=1&amp;sn=d3090a80bc7f91b83cd374ac7ebcfd69&amp;chksm=fafde884cd8a61928be65568456a993fae4ef35304476fe6a87b047c1da3ce2e2e79458935e4&amp;scene=21#wechat_redirect"  target="_blank" data-itemshowtype="0" data-linktype="2" rel="nofollow"><strong>服务是自治</strong></a>的。</p> <p>在系统设计时，要考虑服务上线后，对于问题要自感知、自修复、自优化、自运维及自安全。</p> <p><strong>考虑七：应急预案</strong></p> <p data-pid="K7xAw8hB"><a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=http://mp.weixin.qq.com/s?__biz=MzUzNjAxODg4MQ==&amp;mid=2247485806&amp;idx=1&amp;sn=267b1a6980afc82695441072a2d9af60&amp;chksm=fafde3c0cd8a6ad62a541e3a62fda77234ea15c683c1acc9115731cf0c5643baa2de10b1adaa&amp;scene=21#wechat_redirect"  target="_blank" data-itemshowtype="0" data-linktype="2" rel="nofollow"><strong>SOP</strong></a>（Standard Operating Procedure三个单词中首字母的大写 ）即标准作业程序，就是将某一事件的标准操作步骤和要求以统一的格式描述出来，用来指导和规范日常的工作。</p> <p data-pid="K7xAw8hB"> <p data-pid="ngxOZYlU"><a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=http://mp.weixin.qq.com/s?__biz=MzUzNjAxODg4MQ==&amp;mid=2247486431&amp;idx=1&amp;sn=c6bb35981521d01846c7a02517f5d281&amp;chksm=fafde171cd8a68677f5ead2228b27d009ff60746adf77861ec63e951fed3e0ba7cbb665a64f9&amp;scene=21#wechat_redirect"  target="_blank" data-itemshowtype="0" data-linktype="2" rel="nofollow"><strong>EOP</strong></a>（Emergency Operating Procedure三个单词中首字母的大写 ）即应急操作流程，用于规范应急操作过程中的流程及操作步骤。确保人员可以迅速启动，确保有序、有效地组织实施各项应对措施。</p> <p data-pid="ngxOZYlU"> <p data-pid="ngxOZYlU">这两种操作流程需要平时就整理好，避免紧急情况下思虑不周导致操作时的二次故障。</p> <p><strong>考虑八：故障隔离</strong></p> <p>隔离是行之有效的故障规避措施。有以下隔离手段。</p> <ul class="list-paddingleft-1"> <li> <p>领域拆分隔离方面</p> </li> <ul class="list-paddingleft-1"> <li> <p><a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=http://mp.weixin.qq.com/s?__biz=MzUzNjAxODg4MQ==&amp;mid=2247486632&amp;idx=1&amp;sn=7b443147ff6b4d10ab0c09ee6e1e1d73&amp;chksm=fafde606cd8a6f109870d9ad2c47cc42497de5a0f18d84bcdb174d3bf13e49efe8b6bf1a27d2&amp;scene=21#wechat_redirect"  target="_blank" data-itemshowtype="0" data-linktype="2" rel="nofollow"><strong>ACL防止损坏层</strong></a></p> </li> <li> <p><a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=http://mp.weixin.qq.com/s?__biz=MzUzNjAxODg4MQ==&amp;mid=2247487033&amp;idx=2&amp;sn=6f2744a4e09457c707f6fe638cac230a&amp;chksm=fafde497cd8a6d813ddc3c1e13befcd75143b0a62a9eac22386e6cd4f7dbfd6184eb6ca9bd6f&amp;scene=21#wechat_redirect"  target="_blank" data-itemshowtype="0" data-linktype="2" rel="nofollow"><strong>有界上下文</strong></a></p> </li> <li> <p>提炼核心、支撑和通用域</p> </li> <li> <p><a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=http://mp.weixin.qq.com/s?__biz=MzUzNjAxODg4MQ==&amp;mid=2247483674&amp;idx=1&amp;sn=77f06af636c2b25fb182d4ea667bc6c7&amp;chksm=fafdebb4cd8a62a2c298ac51236c3f8a052f7be315834ddb4b6954eb0b0a400ce923a7b20ae8&amp;scene=21#wechat_redirect"  target="_blank" data-itemshowtype="0" data-linktype="2" rel="nofollow"><strong>分层架构</strong></a></p> </li> <li> <p><a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=http://mp.weixin.qq.com/s?__biz=MzUzNjAxODg4MQ==&amp;mid=2247484092&amp;idx=1&amp;sn=99082fb559f866a7c7ae3612250d9535&amp;chksm=fafde812cd8a6104614342c2b0785fedb8dedfef033ff5f1b9a0f8f6bbd33de3ba31ed94d6f6&amp;scene=21#wechat_redirect"  target="_blank" data-itemshowtype="0" data-linktype="2" rel="nofollow"><strong>CRUD增删改查简单架构</strong></a></p> </li> <li> <p><a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=http://mp.weixin.qq.com/s?__biz=MzUzNjAxODg4MQ==&amp;mid=2247485928&amp;idx=1&amp;sn=d60b63b554e5d1b054f273e898ed12c5&amp;chksm=fafde346cd8a6a50fbf7d2d4b3eafc36ba356e161251504203465effcf187dc5368cff9f04b9&amp;scene=21#wechat_redirect"  target="_blank" data-itemshowtype="0" data-linktype="2" rel="nofollow"><strong>CQRS命令查询隔离</strong></a></p> </li> <li> <p><a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=http://mp.weixin.qq.com/s?__biz=MzUzNjAxODg4MQ==&amp;mid=2247485188&amp;idx=1&amp;sn=3618568ba3bf9c396195d8e2c4e6723d&amp;chksm=fafdedaacd8a64bca74024452fb88a56ff99aa6bcd9ae841fca1b91cbff40d4dd78698b09dcc&amp;scene=21#wechat_redirect"  target="_blank" data-itemshowtype="0" data-linktype="2" rel="nofollow"><strong>依赖消弱控</strong></a></p> </li> </ul> <li> <p>服务部署隔离方面</p> </li> <ul class="list-paddingleft-1"> <li> <p>环境拆分</p> </li> <li> <p>机房隔离</p> </li> <li> <p>通道隔离</p> </li> <li> <p>单元化</p> </li> <li> <p>泳道</p> </li> <li> <p>热点隔离</p> </li> <li> <p>读写隔离</p> </li> <li> <p>容器隔离</p> </li> <li> <p>拆库拆表</p> </li> <li> <p>动静隔离</p> </li> <li> <p>非核心流量隔离</p> </li> </ul> <li> <p>服务间交互隔离方面</p> </li> <ul class="list-paddingleft-1"> <li> <p><a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=http://mp.weixin.qq.com/s?__biz=MzUzNjAxODg4MQ==&amp;mid=2247485315&amp;idx=1&amp;sn=41e61beaa78b2840633adb3b8cec380a&amp;chksm=fafded2dcd8a643b46d38bfdb81b9441091afc5ec5b3d385342b6fb20b307480c03ff3b5f604&amp;scene=21#wechat_redirect"  target="_blank" data-itemshowtype="0" data-linktype="2" rel="nofollow"><strong>超时熔断</strong></a></p> </li> <li> <p>失败率超限降级</p> </li> <li> <p>服务内资源隔离方面</p> </li> <li> <p><a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=http://mp.weixin.qq.com/s?__biz=MzUzNjAxODg4MQ==&amp;mid=2247485474&amp;idx=1&amp;sn=df22866d7a0b096e7169a5bef81a3058&amp;chksm=fafde28ccd8a6b9a0157fb4e2600a71c8a5db6db7eea37dfdbd6f25e6d3b38b6ab92c4d1f9e3&amp;scene=21#wechat_redirect"  target="_blank" data-itemshowtype="0" data-linktype="2" rel="nofollow"><strong>线程池隔离</strong></a></p> </li> <li> <p>信号量隔离</p> </li> </ul> </ul> <p><strong>考虑九：风险巡检</strong></p> <p>核心系统稳定之后，更多的从边缘进行优化，避免影响核心系统的稳定。风险巡检是优化的重要方面。常见的有以下内容。</p> <ul class="list-paddingleft-1"> <li> <p>请求系统错误统计</p> </li> <li> <p>请求业务错误统计</p> </li> <li> <p>请求内部错误统计</p> </li> <li> <p>慢查询统计巡检</p> </li> <li> <p>数据一致性巡检</p> </li> <li> <p>流程执行情况巡检</p> </li> </ul> <p><strong>审计和安全</strong></p> <p><strong>考虑十：合法合规</strong></p> <p><a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=http://mp.weixin.qq.com/s?__biz=MzUzNjAxODg4MQ==&amp;mid=2247484103&amp;idx=1&amp;sn=2b77a63f5e03e41a555df833d5686ec8&amp;chksm=fafde869cd8a617f9ade7e54d5b3d22882de7da9dfe3164cd1f9551a3a9162dced482d1860a9&amp;scene=21#wechat_redirect"  target="_blank" data-itemshowtype="0" data-linktype="2" rel="nofollow"><strong>合法合规</strong></a>是企业生死存亡的大事。近年来，由于政策影响，很多教育机构面临了巨大的危机甚至倒闭。</p> <p>对于金融类企业，太多合规操作。比如：行业要求金融交易类系统不能与其他系统混合部署；平台没有清结算资质可能面临二清问题。提到资质，不得不说说金融牌照。在我国，需要审批的金融牌照主要包括银行、信托、保险、券商、期货、基金、基金子公司、基金销售、金融租赁、小额贷款、第三方支付牌照、典当12种。业务的牌照要对口。</p> <p><strong>考虑十一：严格准入</strong></p> <p>做需求有个常识，对于用户输入的每个字段都需要和产品经理讨论一下：什么类型、长度多少、允许的字符集范围、格式是否合法。这么做一方面是设计问题，包括产品设计、数据库设计，还有一部分是安全问题：一个数值型的字段肯定比一个粗放的文本型字段被攻击的可能性小，起码不会传到后端之后被当成脚本被执行。</p> <p><a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=http://mp.weixin.qq.com/s?__biz=MzUzNjAxODg4MQ==&amp;mid=2247484379&amp;idx=1&amp;sn=012608c46885969e2b6b6dd5fcf1d70a&amp;chksm=fafde975cd8a606321a8cc42caa24501df999aa53453943173e6a972c5425ba99252a895dd6e&amp;scene=21#wechat_redirect"  target="_blank" data-itemshowtype="0" data-linktype="2" rel="nofollow"><strong>操作合理性准入</strong></a>也是考虑的重要方面。比如一个普通用户不能编辑另一个用户的个人信息。比如i申请公司服务器，一次申请1万台机器。比如流量准入，一台机器以超快的速度频繁访问一个网站的资讯信息，就可能不是真实用户操作而是爬虫。以上都会对系统安全性产生极大的影响。</p> <p><strong>总结</strong></p> <p>一张图总结今天的内容：</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220509/5c506aef83b4da4831ae53629796de28.jpg" alt="系统设计的11个考虑编程一生 "></p> 			                <div class="clearfix"></div>
                <div class="col-md-12 mt-5">
                                        <p>上一个：<a href="/news/article-20821.htm">mysql 独立schema_详解MySQL中的数据类型和schema优化</a></p>
                                        <p>下一个：<a href="/news/article-21282.htm">小型狗粮加工厂的流程图（办一个小型狗粮加工厂）</a></p>
                                    </div>
                                </div>
                <div class="col-md-3">
                    <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/free-nodes/2024-10-17-clash-verge-rev-node-github.htm" title="「10月17日」最高速度20.6M/S，2024年Clash Verge每天更新免费机场订阅节点链接">「10月17日」最高速度20.6M/S，2024年Clash Verge每天更新免费机场订阅节点链接</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-10-7-latest-clash-verge-rev-node.htm" title="「10月7日」最高速度20.5M/S，2024年Clash Verge每天更新免费机场订阅节点链接">「10月7日」最高速度20.5M/S，2024年Clash Verge每天更新免费机场订阅节点链接</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-10-8-latest-clash-verge-rev-node.htm" title="「10月8日」最高速度18.3M/S，2024年Clash Verge每天更新免费机场订阅节点链接">「10月8日」最高速度18.3M/S，2024年Clash Verge每天更新免费机场订阅节点链接</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-10-24-clash-verge-rev-github.htm" title="「10月24日」最高速度18.8M/S，2024年Clash Verge每天更新免费机场订阅节点链接">「10月24日」最高速度18.8M/S，2024年Clash Verge每天更新免费机场订阅节点链接</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-11-27-node-share.htm" title="「11月27日」最高速度21M/S，2024年Clash Verge每天更新免费机场订阅节点链接">「11月27日」最高速度21M/S，2024年Clash Verge每天更新免费机场订阅节点链接</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-11-17-free-clash-verge-rev-node.htm" title="「11月17日」最高速度22.1M/S，2024年Clash Verge每天更新免费机场订阅节点链接">「11月17日」最高速度22.1M/S，2024年Clash Verge每天更新免费机场订阅节点链接</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-9-22-free-subscribe-node.htm" title="「9月22日」最高速度21.6M/S，2024年Clash Verge每天更新免费机场订阅节点链接">「9月22日」最高速度21.6M/S，2024年Clash Verge每天更新免费机场订阅节点链接</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-10-23-clash-verge-rev-nodes.htm" title="「10月23日」最高速度21.9M/S，2024年Clash Verge每天更新免费机场订阅节点链接">「10月23日」最高速度21.9M/S，2024年Clash Verge每天更新免费机场订阅节点链接</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-11-30-node-share-links.htm" title="「11月30日」最高速度18.8M/S，2024年Clash Verge每天更新免费机场订阅节点链接">「11月30日」最高速度18.8M/S，2024年Clash Verge每天更新免费机场订阅节点链接</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-9-29-latest-clash-verge-rev-node.htm" title="「9月29日」最高速度20.2M/S，2024年Clash Verge每天更新免费机场订阅节点链接">「9月29日」最高速度20.2M/S，2024年Clash Verge每天更新免费机场订阅节点链接</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">15</span> <a href="/date/2024-12/" title="2024-12 归档">2024-12</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">34</span> <a href="/date/2024-11/" title="2024-11 归档">2024-11</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">31</span> <a href="/date/2024-10/" title="2024-10 归档">2024-10</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">30</span> <a href="/date/2024-09/" title="2024-09 归档">2024-09</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">10</span> <a href="/date/2024-08/" title="2024-08 归档">2024-08</a></h4>
            </li>
                    </ul>
    </div>
</div>

                </div>
            </div>
        </div>
    </section>
    <!-- about-section end -->

        <div class="privacy-area">
        <div class="container">
            <div class="row">
                <div class="col-lg-12 text-center">
                    <p>
                        <a href="/">Verge Clash节点订阅官网</a> 版权所有 Powered by WordPress
                    </p>
                </div>
            </div>
        </div>
    </div>
    <!-- footer-section end -->
    <!-- jquery -->
    <script src="/assets/website/js/frontend/vergeclash/jquery-3.3.1.min.js"></script>
    <!-- migarate-jquery -->
    <script src="/assets/website/js/frontend/vergeclash/jquery-migrate-3.0.0.js"></script>
    <!-- bootstrap js -->
    <script src="/assets/website/js/frontend/vergeclash/bootstrap.min.js"></script>
    <!-- magnific-popup js -->
    <script src="/assets/website/js/frontend/vergeclash/jquery.magnific-popup.js"></script>
    <!-- isotope -->
    <script src="/assets/website/js/frontend/vergeclash/isotope.pkgd.min.js"></script>
    <!-- nice-select js-->
    <script src="/assets/website/js/frontend/vergeclash/jquery.nice-select.js"></script>
    <!-- swipper js -->
    <script src="/assets/website/js/frontend/vergeclash/swiper.min.js"></script>
    <!-- waypoints js link -->
    <script src="/assets/website/js/frontend/vergeclash/jquery.waypoints.min.js"></script>
    <!-- counterup js -->
    <script src="/assets/website/js/frontend/vergeclash/jquery.counterup.min.js"></script>
    <!--typed js-->
    <script src="/assets/website/js/frontend/vergeclash/typed.js"></script>
    <!-- wow js file -->
    <script src="/assets/website/js/frontend/vergeclash/wow.min.js"></script>
    <!-- main -->
    <script src="/assets/website/js/frontend/vergeclash/main.js"></script>
    <script src="https://www.freeclashnode.com/assets/js/frontend/invite-url.js"></script>
    <script src="/assets/website/js/frontend/G.js"></script>
</body>

</html>