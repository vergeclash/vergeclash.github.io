<!DOCTYPE html>
<html lang="zh-CN">

<head>
        <link rel="canonical" href="https://vergeclash.github.io/news/article-29144.htm" />
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <title>springboot整合kafka随记</title>
        <meta name="description" content="除了网上说的使用@KafkaListener注解之外，还可以通过实现CommandLineRunner接口的方式来配置kafka的消费者。 @Component@Slf4jpublicclassKaf" />
        <link rel="icon" href="/assets/website/img/vergeclash/favicon.ico" type="image/x-icon"/>
    <link href="https://fonts.googleapis.com/css?family=Poppins:400,400i,500,500i,600,600i,700,700i,800,800i,900,900i|Roboto:400,400i,500,500i,700,700i,900,900i&display=swap" rel="stylesheet">
    <!-- fontawesome css link -->
    <link rel="stylesheet" href="/assets/website/css/vergeclash/fontawesome-all.min.css">
    <!-- flaticon css -->
    <link rel="stylesheet" href="/assets/website/fonts/vergeclash/flaticon.css">
    <!-- magnific popup -->
    <link rel="stylesheet" href="/assets/website/css/vergeclash/magnific-popup.css">
    <!-- nice-select css -->
    <link rel="stylesheet" href="/assets/website/css/vergeclash/nice-select.css">
    <!-- bootstrap css link -->
    <link rel="stylesheet" href="/assets/website/css/vergeclash/bootstrap.min.css">
    <!-- swipper css link -->
    <link rel="stylesheet" href="/assets/website/css/vergeclash/swiper.min.css">
    <!-- animate.css -->
    <link rel="stylesheet" href="/assets/website/css/vergeclash/animate.css">
    <!-- main style css link -->
    <link rel="stylesheet" href="/assets/website/css/vergeclash/style.css">
    <!-- Google tag (gtag.js) -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-J1J0SRBETJ"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-J1J0SRBETJ');
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body data-page="detail">
        <div class="preloader">
        <div class="preloader-inner">
            <div class="preloader-icon">
                <span></span>
                <span></span>
            </div><!-- /preloader-icon -->
        </div><!-- /preloader-inner -->
    </div><!-- /preloader -->
    <!-- header-section start -->
    <header class="header-section">
        <div class="header">
            <div class="header-bottom-area">
                <div class="container">
                    <nav class="navbar navbar-expand-lg p-0">
                                                <a class="site-logo site-title" href="/"><span>Verge Clash</span></a>
                                                <button class="navbar-toggler ml-auto" type="button" data-toggle="collapse" data-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
                            <span class="fas fa-bars"></span>
                        </button>
                        <div class="collapse navbar-collapse" id="navbarSupportedContent">
                            <ul class="navbar-nav main-menu ml-auto">
                                                                <li><a href="/">首页</a></li>
                                                                <li><a href="/free-nodes/">免费节点</a></li>
                                                                <li><a href="/paid-subscribe/">推荐机场</a></li>
                                                                <li><a href="/news/">新闻资讯</a></li>
                                                                <li><a href="#">关于</a></li>
                                <li><a href="#">联系</a></li>
                            </ul>
                        </div>
                    </nav>
                </div>
            </div>
        </div>
    </header>
    <!-- header-section end -->
    <!-- inner-banner-section start -->
    <section class="inner-banner-section bg-overlay-main-two bg_img" data-background="assets/images/bg-3.jpg">
        <div class="container">
            <div class="row justify-content-center">
                <div class="col-lg-12 text-center">
                    <div class="inner-banner-content">
                        <h1 class="title wow fade-in-up" data-wow-duration="1s" data-wow-delay="0.5s">springboot整合kafka随记</h1>
                        <div class="breadcrumb-area wow fade-in-bottom" data-wow-duration="1s" data-wow-delay="0.5s">
                            <nav aria-label="breadcrumb">
                                <ol class="breadcrumb">
                                    <li class="breadcrumb-item"><a href="/">首页</a></li>
                                    <li class="breadcrumb-item"><a href="/news/">新闻资讯</a></li>
                                    <li class="breadcrumb-item active" aria-current="page">正文</li>
                                </ol>
                            </nav>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </section>
    <!-- inner-banner-section end -->
    
    <a href="#" class="scrollToTop"><i class="fas fa-angle-up"></i></a>
    <!-- about-section start -->
    <section class="about-section pd-t-120 py-5">
        <div class="container">
            <div class="row">
                <div class="col-md-9">
                                    <input type="hidden" id="share-website-info" data-name="" data-url="">
                  				  				  				<div id="content_views" class="markdown_views prism-atom-one-dark"> </h1> <p>除了网上说的使用@KafkaListener注解之外，还可以通过实现CommandLineRunner接口的方式来配置kafka的消费者。</p> <pre><code class="prism language-java"><span class="token annotation punctuation">@Component</span><span class="token annotation punctuation">@Slf4j</span><span class="token keyword">public</span><span class="token keyword">class</span><span class="token class-name">KafkaConsumer</span><span class="token keyword">implements</span><span class="token class-name">CommandLineRunner</span><span class="token punctuation">{<!-- --></span><span class="token annotation punctuation">@Value</span><span class="token punctuation">(</span><span class="token string">"${spring.kafka.topic}"</span><span class="token punctuation">)</span><span class="token keyword">private</span><span class="token class-name">String</span> kafkaTopic<span class="token punctuation">;</span><span class="token annotation punctuation">@Value</span><span class="token punctuation">(</span><span class="token string">"${spring.kafka.consumer.group-id}"</span><span class="token punctuation">)</span><span class="token keyword">private</span><span class="token class-name">String</span> group_id<span class="token punctuation">;</span><span class="token annotation punctuation">@Value</span><span class="token punctuation">(</span><span class="token string">"${spring.kafka.bootstrap-servers}"</span><span class="token punctuation">)</span><span class="token keyword">private</span><span class="token class-name">String</span> bootstrapServers<span class="token punctuation">;</span><span class="token annotation punctuation">@Value</span><span class="token punctuation">(</span><span class="token string">"${spring.kafka.consumer.key-deserializer}"</span><span class="token punctuation">)</span><span class="token keyword">private</span><span class="token class-name">String</span> consumerDk<span class="token punctuation">;</span><span class="token annotation punctuation">@Value</span><span class="token punctuation">(</span><span class="token string">"${spring.kafka.consumer.value-deserializer}"</span><span class="token punctuation">)</span><span class="token keyword">private</span><span class="token class-name">String</span> consumerDv<span class="token punctuation">;</span><span class="token annotation punctuation">@Value</span><span class="token punctuation">(</span><span class="token string">"${spring.kafka.consumer.username}"</span><span class="token punctuation">)</span><span class="token keyword">private</span><span class="token class-name">String</span> username<span class="token punctuation">;</span><span class="token annotation punctuation">@Value</span><span class="token punctuation">(</span><span class="token string">"${spring.kafka.consumer.pwd}"</span><span class="token punctuation">)</span><span class="token keyword">private</span><span class="token class-name">String</span> pwd<span class="token punctuation">;</span><span class="token annotation punctuation">@Override</span><span class="token keyword">public</span><span class="token keyword">void</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> args<span class="token punctuation">)</span><span class="token keyword">throws</span><span class="token class-name">Exception</span><span class="token punctuation">{<!-- --></span><span class="token class-name">Properties</span> properties<span class="token operator">=</span><span class="token keyword">new</span><span class="token class-name">Properties</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">Password</span> saslJaasConfig<span class="token operator">=</span><span class="token keyword">new</span><span class="token class-name">Password</span><span class="token punctuation">(</span><span class="token class-name">PlainLoginModule</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">" required username=\""</span><span class="token operator">+</span>                 username<span class="token operator">+</span><span class="token string">"\" pass"</span><span class="token operator">+</span><span class="token string">"word=\""</span><span class="token operator">+</span> pwd<span class="token operator">+</span><span class="token string">"\";"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         properties<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token class-name">SaslConfigs</span><span class="token punctuation">.</span>SASL_JAAS_CONFIG<span class="token punctuation">,</span> saslJaasConfig<span class="token punctuation">)</span><span class="token punctuation">;</span>         properties<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token class-name">CommonClientConfigs</span><span class="token punctuation">.</span>SECURITY_PROTOCOL_CONFIG<span class="token punctuation">,</span><span class="token class-name">SecurityProtocol</span><span class="token punctuation">.</span>SASL_PLAINTEXT<span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>         properties<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token class-name">SaslConfigs</span><span class="token punctuation">.</span>SASL_MECHANISM<span class="token punctuation">,</span><span class="token string">"PLAIN"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//kafka集群的ip和端口，用户在集群申请完成后会获得该信息。建议在配置bootstrap.servers配置进所有kafka节点信息</span>         properties<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"bootstrap.servers"</span><span class="token punctuation">,</span> bootstrapServers<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//序列化和反序列化类型</span>         properties<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"key.deserializer"</span><span class="token punctuation">,</span> consumerDk<span class="token punctuation">)</span><span class="token punctuation">;</span>         properties<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"value.deserializer"</span><span class="token punctuation">,</span> consumerDv<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//消费者组</span>         properties<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"group.id"</span><span class="token punctuation">,</span> group_id<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//自定义配置信息，非必须，开发人员可根据自身业务需求进行合理配置，更多配置信息请参考kafka官方文档</span><span class="token comment">// kafka自动提交关闭，这样保证数据不丢</span><span class="token comment">// 常量值或者可配置</span>         properties<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"enable.auto.commit"</span><span class="token punctuation">,</span><span class="token string">"true"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         properties<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"auto.commit.interval.ms"</span><span class="token punctuation">,</span><span class="token string">"1000"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         properties<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"auto.offset.reset"</span><span class="token punctuation">,</span><span class="token string">"latest"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         properties<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"max.poll.records"</span><span class="token punctuation">,</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">try</span><span class="token punctuation">{<!-- --></span><span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>kafka<span class="token punctuation">.</span>clients<span class="token punctuation">.</span>consumer<span class="token punctuation">.</span></span>KafkaConsumer</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> consumer<span class="token operator">=</span><span class="token keyword">new</span><span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>kafka<span class="token punctuation">.</span>clients<span class="token punctuation">.</span>consumer<span class="token punctuation">.</span></span>KafkaConsumer</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span>properties<span class="token punctuation">)</span><span class="token punctuation">;</span>             consumer<span class="token punctuation">.</span><span class="token function">subscribe</span><span class="token punctuation">(</span><span class="token class-name">Collections</span><span class="token punctuation">.</span><span class="token function">singleton</span><span class="token punctuation">(</span>kafkaTopic<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">while</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span><span class="token class-name">ConsumerRecords</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> records<span class="token operator">=</span> consumer<span class="token punctuation">.</span><span class="token function">poll</span><span class="token punctuation">(</span><span class="token class-name">Duration</span><span class="token punctuation">.</span><span class="token function">ofMillis</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token class-name">ConsumerRecord</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span><span class="token keyword">record</span><span class="token operator">:</span> records<span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span><span class="token class-name">String</span> msg<span class="token operator">=</span><span class="token keyword">record</span><span class="token punctuation">.</span><span class="token function">value</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                     log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">"offset = "</span><span class="token operator">+</span><span class="token keyword">record</span><span class="token punctuation">.</span><span class="token function">offset</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">", value = "</span><span class="token operator">+</span> msg<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">catch</span><span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre> </h1> <p>在springboot项目中整合kafka，遇到项目启动可以正常启动并加载kafka配置，但是无法消费消息（已确认消息是已经发出来的），试了网上很多办法，但是都未能解决我遇到的问题，最后尝试<strong>修改了kafka消费者中的group-id</strong>，发现可以消费到消息了。</p> </div> 			                <div class="clearfix"></div>
                <div class="col-md-12 mt-5">
                                        <p>上一个：<a href="/news/article-29142.htm">Pytorch Conv1d()</a></p>
                                    </div>
                                </div>
                <div class="col-md-3">
                    <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/free-nodes/2024-9-28-latest-clash-verge-rev-node.htm" title="「9月28日」最高速度19.2M/S，2024年Clash Verge每天更新免费机场订阅节点链接">「9月28日」最高速度19.2M/S，2024年Clash Verge每天更新免费机场订阅节点链接</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-11-28-free-node-subscribe.htm" title="「11月28日」最高速度19.6M/S，2024年Clash Verge每天更新免费机场订阅节点链接">「11月28日」最高速度19.6M/S，2024年Clash Verge每天更新免费机场订阅节点链接</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-11-15-clash-verge-rev-node-share.htm" title="「11月15日」最高速度22.2M/S，2024年Clash Verge每天更新免费机场订阅节点链接">「11月15日」最高速度22.2M/S，2024年Clash Verge每天更新免费机场订阅节点链接</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-10-18-node-share.htm" title="「10月18日」最高速度22.7M/S，2024年Clash Verge每天更新免费机场订阅节点链接">「10月18日」最高速度22.7M/S，2024年Clash Verge每天更新免费机场订阅节点链接</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-12-9-clash-verge-rev-node-github.htm" title="「12月9日」最高速度20.1M/S，2024年Clash Verge每天更新免费机场订阅节点链接">「12月9日」最高速度20.1M/S，2024年Clash Verge每天更新免费机场订阅节点链接</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-9-14-clash-verge-rev-node.htm" title="「9月14日」最高速度20.4M/S，2024年Clash Verge每天更新免费机场订阅节点链接">「9月14日」最高速度20.4M/S，2024年Clash Verge每天更新免费机场订阅节点链接</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-11-22-clash-verge-rev-node-share.htm" title="「11月22日」最高速度22.2M/S，2024年Clash Verge每天更新免费机场订阅节点链接">「11月22日」最高速度22.2M/S，2024年Clash Verge每天更新免费机场订阅节点链接</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-9-22-free-subscribe-node.htm" title="「9月22日」最高速度21.6M/S，2024年Clash Verge每天更新免费机场订阅节点链接">「9月22日」最高速度21.6M/S，2024年Clash Verge每天更新免费机场订阅节点链接</a></li>
                        <li class="py-2"><a href="/news/article-27752.htm" title="宠物领养店怎么收费的（宠物店领养需要钱吗）">宠物领养店怎么收费的（宠物店领养需要钱吗）</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-11-6-clash-verge-rev-node-github.htm" title="「11月6日」最高速度22.5M/S，2024年Clash Verge每天更新免费机场订阅节点链接">「11月6日」最高速度22.5M/S，2024年Clash Verge每天更新免费机场订阅节点链接</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">63</span> <a href="/date/2024-12/" title="2024-12 归档">2024-12</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">34</span> <a href="/date/2024-11/" title="2024-11 归档">2024-11</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">31</span> <a href="/date/2024-10/" title="2024-10 归档">2024-10</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">30</span> <a href="/date/2024-09/" title="2024-09 归档">2024-09</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">10</span> <a href="/date/2024-08/" title="2024-08 归档">2024-08</a></h4>
            </li>
                    </ul>
    </div>
</div>

                </div>
            </div>
        </div>
    </section>
    <!-- about-section end -->

        <div class="privacy-area">
        <div class="container">
            <div class="row">
                <div class="col-lg-12 text-center">
                    <p>
                        <a href="/">首页</a> | 
                        <a href="/free-node/">免费节点</a> | 
                        <a href="/news/">新闻资讯</a> |
                        <a href="/about-us.htm">关于我们</a> |
                        <a href="/disclaimer.htm">免责申明</a> |
                        <a href="/privacy.htm">隐私申明</a> |
                        <a href="/sitemap.xml">网站地图</a>
                    </p>
                    <p>
                        <a href="/">Verge Clash节点订阅官网</a> 版权所有 Powered by WordPress
                    </p>
                </div>
            </div>
        </div>
    </div>
    <!-- footer-section end -->
    <!-- jquery -->
    <script src="/assets/website/js/frontend/vergeclash/jquery-3.3.1.min.js"></script>
    <!-- migarate-jquery -->
    <script src="/assets/website/js/frontend/vergeclash/jquery-migrate-3.0.0.js"></script>
    <!-- bootstrap js -->
    <script src="/assets/website/js/frontend/vergeclash/bootstrap.min.js"></script>
    <!-- magnific-popup js -->
    <script src="/assets/website/js/frontend/vergeclash/jquery.magnific-popup.js"></script>
    <!-- isotope -->
    <script src="/assets/website/js/frontend/vergeclash/isotope.pkgd.min.js"></script>
    <!-- nice-select js-->
    <script src="/assets/website/js/frontend/vergeclash/jquery.nice-select.js"></script>
    <!-- swipper js -->
    <script src="/assets/website/js/frontend/vergeclash/swiper.min.js"></script>
    <!-- waypoints js link -->
    <script src="/assets/website/js/frontend/vergeclash/jquery.waypoints.min.js"></script>
    <!-- counterup js -->
    <script src="/assets/website/js/frontend/vergeclash/jquery.counterup.min.js"></script>
    <!--typed js-->
    <script src="/assets/website/js/frontend/vergeclash/typed.js"></script>
    <!-- wow js file -->
    <script src="/assets/website/js/frontend/vergeclash/wow.min.js"></script>
    <!-- main -->
    <script src="/assets/website/js/frontend/vergeclash/main.js"></script>
    <script src="https://www.freeclashnode.com/assets/js/frontend/invite-url.js"></script>
    <script src="/assets/website/js/frontend/G.js"></script>
</body>

</html>