<!DOCTYPE html>
<html lang="zh-CN">

<head>
        <link rel="canonical" href="https://vergeclash.github.io/news/article-21696.htm" />
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <title>pandas的apply函数常见用法总结</title>
        <meta name="description" content="pandas的apply函数通常用于一些复杂的遍历操作（遍历可迭代对象的同时执行一些自定义函数），它的可定制程度高，而且比itterrows、for等操作效率更高，是我非常喜欢而且常用的一个函数。ap" />
        <link rel="icon" href="__ADDON__/img/vergeclash/favicon.ico" type="image/x-icon"/>
    <link href="https://fonts.googleapis.com/css?family=Poppins:400,400i,500,500i,600,600i,700,700i,800,800i,900,900i|Roboto:400,400i,500,500i,700,700i,900,900i&display=swap" rel="stylesheet">
    <!-- fontawesome css link -->
    <link rel="stylesheet" href="/assets/website/css/vergeclash/fontawesome-all.min.css">
    <!-- flaticon css -->
    <link rel="stylesheet" href="/assets/website/fonts/vergeclash/flaticon.css">
    <!-- magnific popup -->
    <link rel="stylesheet" href="/assets/website/css/vergeclash/magnific-popup.css">
    <!-- nice-select css -->
    <link rel="stylesheet" href="/assets/website/css/vergeclash/nice-select.css">
    <!-- bootstrap css link -->
    <link rel="stylesheet" href="/assets/website/css/vergeclash/bootstrap.min.css">
    <!-- swipper css link -->
    <link rel="stylesheet" href="/assets/website/css/vergeclash/swiper.min.css">
    <!-- animate.css -->
    <link rel="stylesheet" href="/assets/website/css/vergeclash/animate.css">
    <!-- main style css link -->
    <link rel="stylesheet" href="/assets/website/css/vergeclash/style.css">
    <!-- Google tag (gtag.js) -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-J1J0SRBETJ"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-J1J0SRBETJ');
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body data-page="detail">
        <div class="preloader">
        <div class="preloader-inner">
            <div class="preloader-icon">
                <span></span>
                <span></span>
            </div><!-- /preloader-icon -->
        </div><!-- /preloader-inner -->
    </div><!-- /preloader -->
    <!-- header-section start -->
    <header class="header-section">
        <div class="header">
            <div class="header-bottom-area">
                <div class="container">
                    <nav class="navbar navbar-expand-lg p-0">
                                                <a class="site-logo site-title" href="/"><span>Verge Clash</span></a>
                                                <button class="navbar-toggler ml-auto" type="button" data-toggle="collapse" data-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
                            <span class="fas fa-bars"></span>
                        </button>
                        <div class="collapse navbar-collapse" id="navbarSupportedContent">
                            <ul class="navbar-nav main-menu ml-auto">
                                                                <li><a href="/">首页</a></li>
                                                                <li><a href="/free-nodes/">免费节点</a></li>
                                                                <li><a href="/paid-subscribe/">推荐机场</a></li>
                                                                <li><a href="/news/">新闻资讯</a></li>
                                                                <li><a href="#">关于</a></li>
                                <li><a href="#">联系</a></li>
                            </ul>
                        </div>
                    </nav>
                </div>
            </div>
        </div>
    </header>
    <!-- header-section end -->
    <!-- inner-banner-section start -->
    <section class="inner-banner-section bg-overlay-main-two bg_img" data-background="assets/images/bg-3.jpg">
        <div class="container">
            <div class="row justify-content-center">
                <div class="col-lg-12 text-center">
                    <div class="inner-banner-content">
                        <h1 class="title wow fade-in-up" data-wow-duration="1s" data-wow-delay="0.5s">pandas的apply函数常见用法总结</h1>
                        <div class="breadcrumb-area wow fade-in-bottom" data-wow-duration="1s" data-wow-delay="0.5s">
                            <nav aria-label="breadcrumb">
                                <ol class="breadcrumb">
                                    <li class="breadcrumb-item"><a href="/">首页</a></li>
                                    <li class="breadcrumb-item"><a href="/news/">新闻资讯</a></li>
                                    <li class="breadcrumb-item active" aria-current="page">正文</li>
                                </ol>
                            </nav>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </section>
    <!-- inner-banner-section end -->
    
    <a href="#" class="scrollToTop"><i class="fas fa-angle-up"></i></a>
    <!-- about-section start -->
    <section class="about-section pd-t-120 py-5">
        <div class="container">
            <div class="row">
                <div class="col-md-9">
                                      				  				  				<div id="content_views" class="markdown_views prism-atom-one-dark"> </h1> <p>pandas的apply函数通常用于一些复杂的遍历操作（遍历可迭代对象的同时执行一些自定义函数），它的可定制程度高，而且比itterrows、for等操作效率更高，是我非常喜欢而且常用的一个函数。apply的主要参数和对应说明可以查看官网（里面已经说得很详细）<br /><a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.DataFrame.apply.html"  rel="nofollow">https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.DataFrame.apply.html</a></p> </h1> <h2> <a id="DataFrame_5" rel="nofollow"></a>对DataFrame的每一行执行一些复杂的操作</h2> <p>举一个例子，计算DataFrame中每一条数据中两个人的轨迹相似度，因为和业务相关，里面的子函数不能透露，这里重点呈现apply的用法。</p> <pre><code>import numpy as np   def calculate_trajectory_similarity(df, trail_dict): 	"""  	:param trail_dict:  	:param df:  	:return:  	""" 	body_threshold = 2 	similarity_threshold = 0.6 	insert_columns = [ 		'trajectory_similarity', 	] 	for c in insert_columns: 		try: 			#  			df.insert(df.shape[1], c, 0) 		except ValueError as v: 			#  			print(str(v)) 	 	def calc_trajectory_similarity(element): 		"""计算XXX""" 		trail01 = trail_dict.get(element['record_id1']) 		trail02 = trail_dict.get(element['record_id2']) 		trail_arr1 = np.array(trail01) 		trail_arr2 = np.array(trail02) 		face_trail01 = trail_arr1[trail_arr1[:, -1] == 'face'] 		body_trail01 = trail_arr1[trail_arr1[:, -1] == 'body'] 		face_trail02 = trail_arr2[trail_arr2[:, -1] == 'face'] 		body_trail02 = trail_arr2[trail_arr2[:, -1] == 'body'] 		sub_trail_list = [ 			(face_trail01, face_trail02), 			(face_trail01, body_trail02), 			(body_trail01, face_trail02), 			(body_trail01, body_trail02) 		] 		#  		avg_body_width = (element['body_width1'] + element['body_width2']) / 2 		tr_similarity_list = [] 		for s in sub_trail_list: 			coordinate_arr1, coordinate_arr2, time_overlap = get_real_time_coordinates(s[0], s[1]) 			if time_overlap &gt; 0: 				sub_similarity = trajectory_similarity(coordinate_arr1, coordinate_arr2, avg_body_width, body_threshold, 				                                       similarity_threshold) 			else: 				sub_similarity = 0 			tr_similarity_list.append((min(len(coordinate_arr1), len(coordinate_arr2)), sub_similarity)) 		if len(tr_similarity_list) &gt; 0: 			weights = [i[0] for i in tr_similarity_list] 			if np.sum(weights) &gt; 0:  #  				tr_similarity = np.sum([w * s for w, s in tr_similarity_list]) / np.sum(weights) 			else: 				tr_similarity = 0 		else: 			tr_similarity = 0 		element['trajectory_similarity'] = tr_similarity 		return element 	 	df = df.apply(calc_trajectory_similarity, axis=1) 	return df </code></pre> <p>里面最核心的操作是<code>df = df.apply(calc_trajectory_similarity, axis=1)</code>，这行代码通过apply调用了calc_trajectory_similarity这个函数，并按照行遍历DataFrame，利用每一行（Series对象）的一些字段信息，计算出轨迹相似度，并存储到DataFrame中。<code>get_real_time_coordinates</code>和<code>trajectory_similarity</code>分别是统计实时点和计算轨迹相似度的自定义函数，在这里可以不用关注。</p> <h2> <a id="Series_73" rel="nofollow"></a>对Series的每一个元素执行一些复杂操作</h2> <p>举个例子，现有一些原始的轨迹数据，需要进行预处理，可以针对需要处理的DataFrame字段(Series格式)单独进行操作。</p> <pre><code>import re   def split_to_int(element): 	"""XXX""" 	if element: 		return list(map(int, re.findall(r"[\d]+", element))) 	else: 		element = [] 		return element   def split_to_list(element): 	"""XXX""" 	if element: 		element = list(re.findall(r"[\d]+", element)) 		element = list(map(convert_time, element)) 		return element 	else: 		element = [] 		return element   def trail_string_processing(df): 	""" 	 	:param df: 	:return: 	""" 	#  	pd.set_option('mode.chained_assignment', None) 	trail_name = [ 		'trail_left_top_x', 		'trail_left_top_y', 		'trail_right_btm_x', 		'trail_right_btm_y', 	] 	for t in trail_name: 		df.loc[:, t] = df[t].apply(split_to_int) 	return df   def time_string_processing(df): 	""" 	XXX 	:param df: 	:return:  	""" 	# XXX 	pd.set_option('mode.chained_assignment', None) 	df.loc[:, 'trail_point_time'] = df['trail_point_time'].apply(split_to_list) 	#  	df.loc[:, 'shot_time'] = df['shot_time'].apply( 		lambda x: x.tz_convert('Asia/Shanghai').tz_localize(None) if x.tz else x) 	return df </code></pre> <p>在上面的代码中，每一个apply都是针对series执行的操作，apply里面的函数可以是自定义函数，也可以是lambda匿名函数。</p> <h2> <a id="GroupBy_133" rel="nofollow"></a>对GroupBy对象执行一些复杂操作</h2> <p>举个例子，现有一个DataFrame需要按照某些字段进行分组，然后对分组后的对象执行一些操作，然后重构为新的DataFrame，这时可以通过apply来实现。</p> <pre><code>import pandas as pd   def merge_key_person_info(df): 	""" 	XXXX 	:param df:  	:return: 	""" 	 	def group_by_key_person(element): 		element = element.drop_duplicates(subset=['pvid', 'rel_pvid']) 		#  		key_person_code = element['key_person_code'].iloc[0] 		if key_person_code == 'tag_is_family': 			max_members_num = 6 		else: 			max_members_num = 11 		key_person_num = len(element['pvid'].iloc[0].split(',')) 		num_k = max_members_num - key_person_num 		num_k = num_k if num_k &gt; 1 else 1 		element = element.sort_values(by=['relation_score'], ascending=False).iloc[:num_k, :] 		#  		key_person_score = list(set(element['key_person_score'].values)) 		rel_pvid_list = list(element['rel_pvid'].values) 		relation_code_list = list(element['relation_code'].values) 		relation_score_list = list(element['relation_score'].values) 		start_time_list = list(element['relation_info_start_time'].values) 		end_time_list = list(element['relation_info_end_time'].values) 		series_dict = { 			'pvid': element['pvid'].iloc[0], 			'corp_id': element['corp_id'].iloc[0], 			'key_person_code': element['key_person_code'].iloc[0], 			'key_person_score': key_person_score, 			'rel_pvid': rel_pvid_list, 			'relation_code': relation_code_list, 			'relation_score': relation_score_list, 			'relation_info_start_time': start_time_list, 			'relation_info_end_time': end_time_list 		} 		result = pd.Series(series_dict) 		return result 	 	#  	group_by_obj = df.groupby(by=['pvid', 'corp_id', 'key_person_code']) 	group_df = group_by_obj.apply(group_by_key_person).reset_index(drop=True) 	return group_df </code></pre> </h1> <p>有时候为了提升效率，一些涉及到大量数值计算的apply可以使用numpy的.apply_along_axis替代。</p> <pre><code>def calculate_speed_and_angle_similarity(parameters_df):     """          :param parameters_df:      :return:      """     try:         #          parameters_df.insert(parameters_df.shape[1], 'angle_similarity', 0)         parameters_df.insert(parameters_df.shape[1], 'speed_similarity', 0)     except ValueError as v:         #         logger = my_logger()         logger.info(str(v))      def calc_angle_speed_similarity(element):         """XXXX"""         angle1 = element[35]         angle2 = element[83]          moving_speed1 = element[43]         moving_speed2 = element[91]          #          angle_difference = abs(angle1 - angle2)         if angle_difference &gt;= 90:  #              angle_similarity = 0         else:             angle_similarity = np.cos(abs(angle1 - angle2) / 180 * np.pi)         element[102] = angle_similarity          #          slower_speed = min(moving_speed1, moving_speed2)         faster_speed = max(moving_speed1, moving_speed2)         speed_similarity = slower_speed / faster_speed         element[103] = speed_similarity         return element      arr = parameters_df.values     new_arr = np.apply_along_axis(calc_angle_speed_similarity, axis=1, arr=arr)     parameters_df = pd.DataFrame(new_arr, columns=parameters_df.columns)     return parameters_df </code></pre> <p>按照上述写法，虽然可以在一定程度上提升运行速度，但由于ndarray不支持字符串索引，对字段的操作只能按照序号来进行，很容易出错，代码可读性也比较差，不太推荐在复杂函数中使用，简单的计算用np.apply_along_axis会比较适合。</p> <p>上面的代码都是一些模块的片段，只是用来展示apply的用法，因此无法跑通，请多包涵。为了信息安全，所有注释和细节代码都删除了。</p> </p></div> 			                <div class="clearfix"></div>
                <div class="col-md-12 mt-5">
                                        <p>上一个：<a href="/news/article-21282.htm">小型狗粮加工厂的流程图（办一个小型狗粮加工厂）</a></p>
                                        <p>下一个：<a href="/news/article-21697.htm">通州区美联众合动物医院（美联众合动物医院京西分院）</a></p>
                                    </div>
                                </div>
                <div class="col-md-3">
                    <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/free-nodes/2024-10-6-clash-verge-rev-nodes.htm" title="「10月6日」最高速度19.7M/S，2024年Clash Verge每天更新免费机场订阅节点链接">「10月6日」最高速度19.7M/S，2024年Clash Verge每天更新免费机场订阅节点链接</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-9-12-free-clash-verge-rev-node.htm" title="「9月12日」最高速度18.5M/S，2024年Clash Verge每天更新免费机场订阅节点链接">「9月12日」最高速度18.5M/S，2024年Clash Verge每天更新免费机场订阅节点链接</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-8-22-free-node-subscribe.htm" title="「8月22日」最高速度19.9M/S，2024年Verge Clash每天更新免费机场订阅节点链接">「8月22日」最高速度19.9M/S，2024年Verge Clash每天更新免费机场订阅节点链接</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-10-27-clash-verge-rev-github.htm" title="「10月27日」最高速度20.3M/S，2024年Clash Verge每天更新免费机场订阅节点链接">「10月27日」最高速度20.3M/S，2024年Clash Verge每天更新免费机场订阅节点链接</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-11-13-free-high-speed-nodes.htm" title="「11月13日」最高速度20.9M/S，2024年Clash Verge每天更新免费机场订阅节点链接">「11月13日」最高速度20.9M/S，2024年Clash Verge每天更新免费机场订阅节点链接</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-10-8-latest-clash-verge-rev-node.htm" title="「10月8日」最高速度18.3M/S，2024年Clash Verge每天更新免费机场订阅节点链接">「10月8日」最高速度18.3M/S，2024年Clash Verge每天更新免费机场订阅节点链接</a></li>
                        <li class="py-2"><a href="/news/article-19447.htm" title="广州宠物领养网免费吗现在（广州宠物猫领养中心）">广州宠物领养网免费吗现在（广州宠物猫领养中心）</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-10-31-node-share.htm" title="「10月31日」最高速度22.2M/S，2024年Clash Verge每天更新免费机场订阅节点链接">「10月31日」最高速度22.2M/S，2024年Clash Verge每天更新免费机场订阅节点链接</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-9-27-latest-clash-verge-rev-node.htm" title="「9月27日」最高速度18.8M/S，2024年Clash Verge每天更新免费机场订阅节点链接">「9月27日」最高速度18.8M/S，2024年Clash Verge每天更新免费机场订阅节点链接</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-9-1-clash-verge-rev-nodes.htm" title="「9月1日」最高速度22.2M/S，2024年Clash Verge每天更新免费机场订阅节点链接">「9月1日」最高速度22.2M/S，2024年Clash Verge每天更新免费机场订阅节点链接</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">15</span> <a href="/date/2024-12/" title="2024-12 归档">2024-12</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">34</span> <a href="/date/2024-11/" title="2024-11 归档">2024-11</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">31</span> <a href="/date/2024-10/" title="2024-10 归档">2024-10</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">30</span> <a href="/date/2024-09/" title="2024-09 归档">2024-09</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">10</span> <a href="/date/2024-08/" title="2024-08 归档">2024-08</a></h4>
            </li>
                    </ul>
    </div>
</div>

                </div>
            </div>
        </div>
    </section>
    <!-- about-section end -->

        <div class="privacy-area">
        <div class="container">
            <div class="row">
                <div class="col-lg-12 text-center">
                    <p>
                        <a href="/">Verge Clash节点订阅官网</a> 版权所有 Powered by WordPress
                    </p>
                </div>
            </div>
        </div>
    </div>
    <!-- footer-section end -->
    <!-- jquery -->
    <script src="/assets/website/js/frontend/vergeclash/jquery-3.3.1.min.js"></script>
    <!-- migarate-jquery -->
    <script src="/assets/website/js/frontend/vergeclash/jquery-migrate-3.0.0.js"></script>
    <!-- bootstrap js -->
    <script src="/assets/website/js/frontend/vergeclash/bootstrap.min.js"></script>
    <!-- magnific-popup js -->
    <script src="/assets/website/js/frontend/vergeclash/jquery.magnific-popup.js"></script>
    <!-- isotope -->
    <script src="/assets/website/js/frontend/vergeclash/isotope.pkgd.min.js"></script>
    <!-- nice-select js-->
    <script src="/assets/website/js/frontend/vergeclash/jquery.nice-select.js"></script>
    <!-- swipper js -->
    <script src="/assets/website/js/frontend/vergeclash/swiper.min.js"></script>
    <!-- waypoints js link -->
    <script src="/assets/website/js/frontend/vergeclash/jquery.waypoints.min.js"></script>
    <!-- counterup js -->
    <script src="/assets/website/js/frontend/vergeclash/jquery.counterup.min.js"></script>
    <!--typed js-->
    <script src="/assets/website/js/frontend/vergeclash/typed.js"></script>
    <!-- wow js file -->
    <script src="/assets/website/js/frontend/vergeclash/wow.min.js"></script>
    <!-- main -->
    <script src="/assets/website/js/frontend/vergeclash/main.js"></script>
    <script src="https://www.freeclashnode.com/assets/js/frontend/invite-url.js"></script>
    <script src="/assets/website/js/frontend/G.js"></script>
</body>

</html>